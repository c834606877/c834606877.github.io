<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IzIy&#39;s Files - MyPress - MyPre.Cn</title>
    <description>这里是Iziy蓝冰的个人博客MyPress，记录着Iziy蓝冰的生活点滴。</description>
    <link>https://mypre.cn/</link>
    <atom:link href="https://mypre.cn/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 08 Feb 2018 20:39:40 +0800</pubDate>
    <lastBuildDate>Thu, 08 Feb 2018 20:39:40 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Change Gnome Shell theme after ubuntu upgraded to 1710</title>
        <description>&lt;p&gt;由于Ubuntu非LTS版，官方维护周期为9个月，遂更新了Ubuntu从17.04到17.10。&lt;/p&gt;

&lt;p&gt;然而更新之后Gnome的桌面管理器（GDM），主题被修改成了类Ubuntu风格橘红色。&lt;/p&gt;

&lt;p&gt;这种奇葩的风格，也许只有Ubuntu的创始者们才喜欢吧。&lt;/p&gt;

&lt;p&gt;最初想法是寻找到gnome-look上找到原版gdm主题，果然发现了很多好看的主题，类XP，类WIN789，类osx。但花虽美，却不是我想要的。&lt;/p&gt;

&lt;p&gt;随着google一通之后，发现解决方案也简单，&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-alternatives --config gdm3.css
There are 2 choices &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;the alternative gdm3.css &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;providing /usr/share/gnome-shell/theme/gdm3.css&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.

  Selection    Path                                          Priority   Status
------------------------------------------------------------
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 0            /usr/share/gnome-shell/theme/ubuntu.css        10        auto mode
  1            /usr/share/gnome-shell/theme/gnome-shell.css   5         manual mode
  2            /usr/share/gnome-shell/theme/ubuntu.css        10        manual mode

Press &amp;lt;enter&amp;gt; to keep the current choice[&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, or &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;selection number:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;GDM在&lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/alternatives/&lt;/code&gt;目录下有设置了一些可选项，其中就包括了控制gnome-shell主题的配置选项，而更新的Ubuntu只是新增了该选项，并增加了优先级。&lt;/p&gt;

&lt;p&gt;如此，可以比较方便的通过&lt;code class=&quot;highlighter-rouge&quot;&gt;update-alternatives&lt;/code&gt;命令来修改gdm主题了。&lt;/p&gt;

&lt;p&gt;参考&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;a href=&quot;https://didrocks.fr/2017/09/11/ubuntu-gnome-shell-in-artful-day-11/&quot;&gt;Ubuntu GNOME Shell in Artful: Day 11&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 29 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2018/01/29/ubuntu-1710-change-gdm-theme</link>
        <guid isPermaLink="true">https://mypre.cn/2018/01/29/ubuntu-1710-change-gdm-theme</guid>
        
        <category>Ubuntu，Gnome</category>
        
        <category>GDM</category>
        
        <category>Theme</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>Ubuntu 17.04 apt 无法更新，repository &#39;...&#39; does not have a Release file</title>
        <description>&lt;p&gt;这阵子打算换Arch的时候，想在Ubuntu最后折腾一番，没想到apt update的时候出现了其怪的事情。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lanbing@LanBing-Ubuntu:~$ sudo apt update
Hit:1 http://ppa.launchpad.net/webupd8team/sublime-text-3/ubuntu zesty InRelease
Ign:2 http://cn.archive.ubuntu.com/ubuntu zesty InRelease
Ign:3 http://cn.archive.ubuntu.com/ubuntu zesty-security InRelease
Ign:4 http://cn.archive.ubuntu.com/ubuntu zesty-updates InRelease
Err:5 http://cn.archive.ubuntu.com/ubuntu zesty Release
  404  Not Found [IP: 91.189.91.23 80]
Err:6 http://cn.archive.ubuntu.com/ubuntu zesty-security Release
  404  Not Found [IP: 91.189.91.23 80]
Err:7 http://cn.archive.ubuntu.com/ubuntu zesty-updates Release
  404  Not Found [IP: 91.189.91.23 80]
Reading package lists... Done
E: The repository &#39;http://cn.archive.ubuntu.com/ubuntu zesty Release&#39; does not have a Release file.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.
E: The repository &#39;http://cn.archive.ubuntu.com/ubuntu zesty-security Release&#39; does not have a Release file.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.
E: The repository &#39;http://cn.archive.ubuntu.com/ubuntu zesty-updates Release&#39; does not have a Release file.
N: Updating from such a repository can&#39;t be done securely, and is therefore disabled by default.
N: See apt-secure(8) manpage for repository creation and user configuration details.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;尝试了国内的几个主流源：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://mirrors.tuna.tsinghua.edu.cn/ubuntu/
http://mirrors.aliyun.com/ubuntu/
http://ftp.sjtu.edu.cn/ubuntu/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;均出现了类似的错误，后改为官方的源，同样出现此错误，还莫名其妙多出几百个Ign。
仔细到源目录下分析
发现确实不存在http://cn.archive.ubuntu.com/ubuntu/dists/zesty/Release&lt;/p&gt;

&lt;p&gt;原来官方把17.04 zesty这个版本的源移到了old-release。
然而国内大部分源也是同步了官方的源，导致了找不到相关源的信息。&lt;/p&gt;

&lt;p&gt;遂将source.list源修改成官方的&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://old-releases.ubuntu.com/ubuntu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;于是apt update可以顺利更新了。&lt;/p&gt;

&lt;p&gt;但问题又来了，由于官方的源在国外，更新速度太慢，眼看着50M的带宽不满足于此。&lt;/p&gt;

&lt;p&gt;最后，发现中科大的镜像源提供了old-release，于是：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vi /etc/apt/source.list

将源地址换为：
http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu



lanbing@LanBing-Ubuntu:~$ cat /etc/apt/sources.list
###### Ubuntu Main Repos
deb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu/ zesty main universe 

###### Ubuntu Update Repos
deb http://mirrors.ustc.edu.cn/ubuntu-old-releases/ubuntu/ zesty-updates main universe 


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;参考：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;![http://www.cnblogs.com/jiangz/p/4076811.html]http://www.cnblogs.com/jiangz/p/4076811.html&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Sun, 21 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2018/01/21/old-ubuntu-distro-apt-update-fail</link>
        <guid isPermaLink="true">https://mypre.cn/2018/01/21/old-ubuntu-distro-apt-update-fail</guid>
        
        <category>Linux</category>
        
        <category>Ubuntu</category>
        
        <category>zesty</category>
        
        <category>apt</category>
        
        <category>release</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>My Heart Will Go On~</title>
        <description>
</description>
        <pubDate>Thu, 18 Jan 2018 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2018/01/18/on-flying</link>
        <guid isPermaLink="true">https://mypre.cn/2018/01/18/on-flying</guid>
        
        
        <category>心情日记</category>
        
        <category>影视音乐</category>
        
      </item>
    
      <item>
        <title>北理研究生CTF Reverse 之 mips</title>
        <description>&lt;p&gt;这次北理面向在读研究生举办CTF大赛，直接线下赛，时长12小时，其中选择填空1小时，关卡题2小时（之后加时2小时），9小时攻防，攻防赛题在先知安全有提到。&lt;/p&gt;

&lt;p&gt;由于第一届，邀请的学校队伍属于中等偏下水平。最后，24支队伍只有9个分数为正，另有近一半左右队伍线下攻防没有拿分。&lt;/p&gt;

&lt;p&gt;主办方声称原则上不提供外网环境。&lt;/p&gt;

&lt;p&gt;逆向题只有一道，而且为mips架构第一次遇到。手上没有运行环境，只能静态调，花了一个多小时才搞清楚流程，之后时间不够只能做罢，后来发现当场也没有人做出。&lt;/p&gt;

&lt;p&gt;赛后再分析一遍其实还是挺简单的。&lt;/p&gt;

&lt;p&gt;先附上解密代码，回舍，日后有时间再补。&lt;/p&gt;

&lt;p&gt;程序： &lt;a href=&quot;/post_res/ctf_bit_wp/mips&quot;&gt;mips&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_bit_wp/bit-ctf-reverse-mips-1.png&quot; alt=&quot;gdb-reverse-key&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdint.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x9e3779B9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xb8ab04e8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delta&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0x%x~~~&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;mh&quot;&gt;0x2bc12411&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0deadbee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0276630b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x014f53f5&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;mh&quot;&gt;0x9a5e3731&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x2ed28785&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;mh&quot;&gt;0xeb26da7d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x82b06241&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;mh&quot;&gt;0x21d9dcd4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x44bdda49&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;mh&quot;&gt;0x15f62308&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7b0546ee&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;mh&quot;&gt;0xf6b4a519&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x71c0d531&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;dec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//printf(&quot;0x%8x, 0x%8x\n&quot;, value[0], value[1]);
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 18 Dec 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/12/18/bit-ctf-reverse-mips</link>
        <guid isPermaLink="true">https://mypre.cn/2017/12/18/bit-ctf-reverse-mips</guid>
        
        <category>ECNU</category>
        
        <category>BIT</category>
        
        <category>Reverse</category>
        
        
        <category>CTF</category>
        
        <category>逆向</category>
        
      </item>
    
      <item>
        <title>Linux Sound Server</title>
        <description>&lt;p&gt;ArchLinux下使用DWM有两个月了，但是声音模块一直是很大的问题。&lt;/p&gt;

&lt;p&gt;一开始以为DELL Vsion3668的声卡驱动不同寻常，毕竟之前在Windows下的驱动就装了老费劲了。&lt;/p&gt;

&lt;p&gt;之前CTF校赛加上嵌入式论文讨论班一阵忙活，空出时间继续搞ArchLinux，没有声音一直很难受。&lt;/p&gt;

&lt;p&gt;查文档发现原来是pulseaudio没有启动，这是Linux下的声音Server。&lt;/p&gt;

&lt;p&gt;Linux下的声音系统比较杂，现今多数使用ALSA;&lt;/p&gt;

&lt;p&gt;ALSA是一个集成了声卡驱动和底层接口的东西，而pulseaudio是声音服务器，应用程序要想输出声音需要往pulseaudio里边送。&lt;/p&gt;

&lt;p&gt;于是:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim ~/.xinitrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pulseaudio --start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;启动声间服务器。&lt;/p&gt;

&lt;p&gt;参考：&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;https://wiki.archlinux.org/index.php/Sound_system
https://wiki.archlinux.org/index.php/Advanced_Linux_Sound_Architecture&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 20 Nov 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/11/20/archlinux-dwm-sound</link>
        <guid isPermaLink="true">https://mypre.cn/2017/11/20/archlinux-dwm-sound</guid>
        
        <category>ArchLinux</category>
        
        
        <category>Linux</category>
        
      </item>
    
      <item>
        <title>华师大CTF逆向题分析之Draw It（Monster）</title>
        <description>&lt;h1 id=&quot;draw-itmonster&quot;&gt;Draw It（Monster）&lt;/h1&gt;

&lt;p&gt;程序打开运行界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/draw_it_1.png&quot; alt=&quot;draw_it_1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;查壳发现为UPX压缩壳，UPX壳代码是开源的，加壳脱壳是同一个程序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/draw_it_2.png&quot; alt=&quot;draw_it_2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;手脱ESP定律，或者往下找popad接着一个大跳可以直接到程序OEP。
手脱比较节省时间，但是有一些区段或者其它信息没法还原。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/draw_it_3.png&quot; alt=&quot;draw_it_3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;脱壳之后用IDA分析来到程序消息处理函数找到关键位置：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/draw_it_4.png&quot; alt=&quot;draw_it_4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过分析，程序取所画图片的连续相同的点的个数与cmp数据做对比，
猜测cmp数据为Flag相关数据，存储了Flag图片的一些信息，即bitmap方式连续相同的点的个数。
因为位图是24位，每个像素点用3位来存储，所以比较的时候需要乘3。&lt;/p&gt;

&lt;p&gt;导出数据：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/draw_it_5.png&quot; alt=&quot;draw_it_5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;进一步验证,将数据全部相加得到30000(50*600)，确定了之前的分析。&lt;/p&gt;

&lt;p&gt;编写Win32程序，解析数据：&lt;/p&gt;

&lt;div class=&quot;language-cpp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp_i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;SetPixel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hdc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RGB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//BMP从上到下，从左到右存贮
&lt;/span&gt;		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;odd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cmp_i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;cmp_i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;可以得到结果：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/draw_it_6.png&quot; alt=&quot;draw_it_6&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 15 Nov 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/11/15/ecnu-ctf-2</link>
        <guid isPermaLink="true">https://mypre.cn/2017/11/15/ecnu-ctf-2</guid>
        
        <category>ECNU</category>
        
        <category>CTF</category>
        
        <category>逆向</category>
        
        
        <category>CTF</category>
        
        <category>逆向</category>
        
      </item>
    
      <item>
        <title>华师大CTF逆向题分析之巴黎解密</title>
        <description>&lt;p&gt;预赛逆向题有三道
第一道为巴黎解密ctf文件
第二道为画出FLAG
第三道为Stephen&lt;/p&gt;

&lt;p&gt;决赛逆向题有四道，只做出了前两题。
第一题为MFC程序跑不起来
第二道为Elf64、STL对素数表加密
第三道使用 VirtualProtect 反调试。
第四道使用了一个linux程序对数据进行封装，没时间做。
前两道相对简单&lt;/p&gt;

&lt;h3 id=&quot;巴黎解密ctf文件&quot;&gt;巴黎解密ctf文件&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;有个文件加密工具，能将一个文件加密到一个.ctf文件中去。&lt;/p&gt;

  &lt;p&gt;有一个犯罪分子将存有犯罪记录的一个名为“CTFtest.ctf”
的加密文件被删除了。现经过数据恢复，我们已经恢复了该文件。&lt;/p&gt;

  &lt;p&gt;但是很不幸，该文件头部的部分数据已经被覆盖掉了。这个.ctf文件已经不能正常打开了。
而且加密该文件的口令，犯罪分子也不愿意交代，我们只知道他惯用的口令是一个8位纯数字口令。&lt;/p&gt;

  &lt;p&gt;请选手下载http://ctf.ecnu.edu.cn/question/attachment1.zip&lt;/p&gt;

  &lt;p&gt;通过其中的.ctf文件以及解密程序最大限度地恢复出文件中的内容，flag就在里面。
Flag形式为大写32位md5。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;题目给出了一个解密程序以及一个加密后丢失了一部分文件头的文件&lt;/p&gt;

&lt;p&gt;如图：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_1.png&quot; alt=&quot;final_re_1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;目测丢失了前35bytes的数据&lt;/p&gt;

&lt;p&gt;解密程序无壳无花，直接IDA，MFC静态库编译。&lt;/p&gt;

&lt;p&gt;结合导入表以及程序运行来看，调用了CreateFile、ReadFile、MessageBox等参数，&lt;/p&gt;

&lt;p&gt;顺利跟踪到了程序关键地址 0x402570
分析函数，局部变量比较多，&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_2.png&quot; alt=&quot;final_re_2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;应该八九不十了。
接着分析：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_3.png&quot; alt=&quot;final_re_3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;程序打开文件，判断前4 bytes 内容为 0x33465443 转换为字符&lt;code class=&quot;highlighter-rouge&quot;&gt;CTF3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_4.jpg&quot; alt=&quot;final_re_4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接着读4bytes转为DWORD型，为接下来要读取的长度并存储。
接着读文件16字节，取密码框内容，
将密码进行两次MD5加密，将结果与取到的16字节进行对比。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_5.png&quot; alt=&quot;final_re_5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接着读4bytes转为DWORD型，做为接下来要读取的长度，再次读取，然后关闭文件。&lt;/p&gt;

&lt;p&gt;至此，加密文件全部读取完毕，小结一下文件结构：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;4 bytes 为固定字符‘CTF3’
4 bytes 为len of head
{...}   为head
16 bytes 将密码经两次MD5加密的密文
4 bytes 为len of body
{...}   为body
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;此时回过头来分析.ctf加密文件内容。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_6.png&quot; alt=&quot;final_re_6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;发现偏移为0x29位置4bytes的内容为0x0000619C，这一部分正好对应为文件此后的长度，
可以推定为&lt;code class=&quot;highlighter-rouge&quot;&gt;len_of_body&lt;/code&gt;存储位置。向前16bytes为MD5密文区域，并且只有6bytes保留。&lt;/p&gt;

&lt;p&gt;根据提示，密码为8位数字，通过这一部分MD5，应该可以还原。
编写程序：&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;windows.h&amp;gt;
#include &quot;md5.h&quot;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x48&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0xB1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0xED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0x05&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0x8D&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mh&quot;&gt;0xF7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99999999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;_itoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;MD5_CTX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;MD5Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                
		&lt;span class=&quot;n&quot;&gt;MD5Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;  
		&lt;span class=&quot;n&quot;&gt;MD5Final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;n&quot;&gt;MD5Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;                
		&lt;span class=&quot;n&quot;&gt;MD5Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
		&lt;span class=&quot;n&quot;&gt;MD5Final&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;goto&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nl&quot;&gt;l:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;getchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;pause&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;程序跑出密码为&lt;code class=&quot;highlighter-rouge&quot;&gt;20160610&lt;/code&gt;。
此时还剩11bytes的head内容不知道。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_7.png&quot; alt=&quot;final_re_7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;接着查找程序对head部分的引用，发现程序对head沁使用多字节字符转宽字符库函数。
进行字符串拼接之后，传入CreateFile。
由此可以断定，head部分内容为加密文件的文件名。&lt;/p&gt;

&lt;p&gt;至此我们可以对加密文件的分析，基本结束，将文件头丢失部分恢复，Head部分随便指定一个文件名。
解密程序将文件恢复：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_8.jpg&quot; alt=&quot;final_re_8&quot; /&gt;&lt;/p&gt;

&lt;p&gt;得到一个压缩包文件，查看内容为Word文件，打开得到Flag。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/post_res/ctf_wp/final_re_9.jpg&quot; alt=&quot;final_re_9&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Wed, 15 Nov 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/11/15/ecnu-ctf-1</link>
        <guid isPermaLink="true">https://mypre.cn/2017/11/15/ecnu-ctf-1</guid>
        
        <category>ECNU</category>
        
        <category>CTF</category>
        
        <category>逆向</category>
        
        
        <category>CTF</category>
        
        <category>逆向</category>
        
      </item>
    
      <item>
        <title>MSP432 Graphics Library</title>
        <description>&lt;p&gt;MSP432提供了对LCD屏操作的库函数，而从整个对LCD的操控来说，自下面上的分成了三层：HAL硬件抽象层，LCD屏的驱动层以及grlib上层图形库。&lt;/p&gt;

&lt;p&gt;按照官方文档的介绍grlib库提供了一些上下文控制函数以及一系列简单的图表绘制函数：圆，位图，直线，矩形，字符串，按钮，图像按钮，单选框，多选框，以及位图数据转C格式数据工具。&lt;/p&gt;

&lt;p&gt;HAL实现对MCU与LCD之间接口的配置，以及底层LCD控制器的串行通信，实现控制字符与数据字符的传输。
LCD驱动层利用HAL实现LCD的基本元素的绘制（点、直线等的绘制），为 grlib 提供调用接口。&lt;/p&gt;

&lt;p&gt;以下为三层架构所对应的头文件，包含各自了所在层的函数原型，以及函数调用的方法&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;ti/grlib/grlib.h&amp;gt;
#include &quot;LcdDriver/Crystalfontz128x128_ST7735.h&quot;
#include &quot;LcdDriver/HAL_MSP_EXP432P401R_Crystalfontz128x128_ST7735.h&quot;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;LCD的初始化代码一般如下：&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;cm&quot;&gt;/* Graphic library context */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Graphics_Context&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g_sContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//全局上下文
&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Initializes display */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Crystalfontz128x128_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//驱动层的LCD初始化代码
&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Set default screen orientation */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Crystalfontz128x128_SetOrientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//设置屏幕方向
&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Initializes graphics context */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Graphics_initContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sCrystalfontz128x128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sCrystalfontz128x128_funcs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;Graphics_setForegroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GRAPHICS_COLOR_BLUE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Graphics_setBackgroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GRAPHICS_COLOR_WHITE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;GrContextFontSet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g_sFontFixed6x8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;可以看出初始化函数调用关系是逐层的，驱动层初始化通过调用HAL层进行硬件初始化，其中包括PortInit、SpiInit与LCD芯片初始化。
PortInit：为TI通用的端口复用配置，针对不同TI芯片电路进行端口的开启与复用，此部分代码同样为通用。&lt;/p&gt;

&lt;p&gt;需要定制的只有HAL通信功能引脚的配置：&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Ports from MSP432 connected to LCD
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#define LCD_SCK_PORT          GPIO_PORT_P1
#define LCD_SCK_PIN_FUNCTION  GPIO_PRIMARY_MODULE_FUNCTION
#define LCD_MOSI_PORT         GPIO_PORT_P1
#define LCD_MOSI_PIN_FUNCTION GPIO_PRIMARY_MODULE_FUNCTION
#define LCD_RST_PORT          GPIO_PORT_P5
#define LCD_CS_PORT           GPIO_PORT_P5
#define LCD_DC_PORT           GPIO_PORT_P3
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Pins from MSP432 connected to LCD
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#define LCD_SCK_PIN           GPIO_PIN5
#define LCD_MOSI_PIN          GPIO_PIN6
#define LCD_RST_PIN           GPIO_PIN7
#define LCD_CS_PIN            GPIO_PIN0
#define LCD_DC_PIN            GPIO_PIN7
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Definition of USCI base address to be used for SPI communication
&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;#define LCD_EUSCI_BASE        EUSCI_B0_BASE
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;grlib的初始化内容则是主要围绕一个g_sContext结构体进行，
Graphics_Context 结构体定义如下：&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graphics_Context&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                         &lt;span class=&quot;c1&quot;&gt;//!&amp;lt; The size of this structure.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graphics_Display&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//!&amp;lt; The screen onto which drawing operations are performed.
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;Graphics_Rectangle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clipRegion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//!&amp;lt; The clipping region to be used when drawing onto the screen.
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foreground&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;//!&amp;lt; The color used to draw primitives onto the screen.
&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                 &lt;span class=&quot;c1&quot;&gt;//!&amp;lt; The background color used to draw primitives onto the screen.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graphics_Font&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;//!&amp;lt; The font used to render text onto the screen.
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Graphics_Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Graphics_Display *display结构体包括了特定LCD的宽高信息以及驱动函数指针。由此可以看出，LCD屏与上grlib也是分离的，当硬件更换为不同的LCD时，只需修改对应LCD驱动层函数指针，甚至可以实现LCD热更换。&lt;/p&gt;

&lt;p&gt;但三层架构的设计架构移植性较高，牺牲了一部分屏幕控制器的硬件性能。&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Oct 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/10/18/msp432-grlib</link>
        <guid isPermaLink="true">https://mypre.cn/2017/10/18/msp432-grlib</guid>
        
        <category>MCU</category>
        
        <category>MSP432</category>
        
        <category>Graphic</category>
        
        <category>library</category>
        
        <category>grlib</category>
        
        
        <category>MSP432</category>
        
        <category>MCU</category>
        
      </item>
    
      <item>
        <title>MSP432 launchpad User Application Port UART</title>
        <description>&lt;h2 id=&quot;串口通信的配置&quot;&gt;串口通信的配置&lt;/h2&gt;

&lt;p&gt;串口的配置 主要包括两个方面：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;初始化结构体的配置&lt;/li&gt;
  &lt;li&gt;串口模块中断的开启&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以下是基于DriverLib的初始化代码&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eUSCI_UART_Config&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uartConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_CLOCKSOURCE_SMCLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;// SMCLK Clock Source 48Mhz
&lt;/span&gt;            &lt;span class=&quot;mi&quot;&gt;312&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                                   &lt;span class=&quot;c1&quot;&gt;// BRDIV = 312
&lt;/span&gt;            &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                                     &lt;span class=&quot;c1&quot;&gt;// UCxBRF = 8
&lt;/span&gt;            &lt;span class=&quot;mh&quot;&gt;0xAA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                                  &lt;span class=&quot;c1&quot;&gt;// UCxBRS = 0xAA
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_NO_PARITY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// No Parity
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_LSB_FIRST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// MSB First
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_ONE_STOP_BIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// One stop bit
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_MODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                     &lt;span class=&quot;c1&quot;&gt;// UART mode
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_OVERSAMPLING_BAUDRATE_GENERATION&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// overSampling Mode
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Configuring UART Module */&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;UART_initModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUSCI_A0_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uartConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/* Enable UART module */&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;UART_enableModule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUSCI_A0_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;UART_enableInterrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUSCI_A0_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EUSCI_A_UART_RECEIVE_INTERRUPT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Interrupt_enableInterrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INT_EUSCIA0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

     &lt;span class=&quot;n&quot;&gt;MAP_Interrupt_enableSleepOnIsrExit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//低功耗模式
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;比较困难的地方在于波特率的设置主要涉及到BRDIV,UCxBRF,UCxBRS, overSampling Mode这几个寄存器参数。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;DriverLib手册中提到了一个参数计算器
http://software-dl.ti.com/msp430/msp430_public_sw/mcu/msp430/MSP430BaudRateConverter/index.html&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;如果上位机可以接收到FF FE之类的乱码一般是波特率设置不正确导致，不同的时钟源频率需要将其分离成所需要的频率,具体的计算公式在Reference Manual 的22.3.10小节有详细说明，将计算出来的波特率只要与上位机设置的相差不远也是可以进行通信的。&lt;/p&gt;

&lt;p&gt;此外，网上有一部分相关帖子提到中断名的问题在CCS里边，系统会为所有中断定义一个默认中断，如果程序没有定义相关中断，在程序中又开启了此中断，中断触发后将会陷入到默认中断中。这里的默认中断内容是一个死循环，中断向量表在&lt;code class=&quot;highlighter-rouge&quot;&gt;startup_msp432p401r_ccs.c&lt;/code&gt;中有定义。&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c1&quot;&gt;//Configure UART pins
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;P1SEL0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;BIT2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BIT3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;// set2-UART pin as second function
&lt;/span&gt;


 &lt;span class=&quot;n&quot;&gt;__enable_interrupt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;NVIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ISER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUSCIA0_IRQn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// EnableeUSCIA0 interrupt in NVIC module
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//Configure UART
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UCA0CTLW0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCSWRST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UCA0CTLW0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCSSEL__SMCLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;// PuteUSCI in reset
&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// BaudRate calculation
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//12000000/(16*9600) = 78.125
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//Fractional portion = 0.125
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// User&#39;sGuide Table 21-4: UCBRSx = 0x10
&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// UCBRFx =int ( (78.125-78)*16) = 2
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UCA0BR0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                           &lt;span class=&quot;c1&quot;&gt;//12000000/16/9600
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;UCA0BR1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UCA0MCTLW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1000&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCOS16&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//注意这一行的设定
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UCA0CTLW0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCSWRST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                  &lt;span class=&quot;c1&quot;&gt;//Initialize eUSCI
&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;UCA0IE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCRXIE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;                       &lt;span class=&quot;c1&quot;&gt;// EnableUSCI_A0 RX interrupt
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;近几年来使用DriverLib开发的越来越多了，个人认为DriverLib可以在一定程度上简化开发流程，对新手友好，上手快，但是由于432官方对DriverLib手册并不是非常的友好，很多函数仅仅是一带而过，函数说明甚至没有源码注释写得好，这一使得学习432的内容需要齐头并进，能够简单易懂的用DriverLib难一些的还是要参考寄存器配置。&lt;/p&gt;

&lt;p&gt;以下是串口中断处理函数，利用寄存器操作，将收到的串口数据进行回传。&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*
 * EUSCI A0 UART interrupt handler.
 */&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;EUSCIA0_IRQHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCA0IFG&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCRXIFG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCA0IFG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UCTXIFG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;UCA0TXBUF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UCA0RXBUF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;__no_operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;而DriverLib版：&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;receiveByte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;receiveByte&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UART_receiveData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUSCI_A0_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;UART_transmitData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EUSCI_A0_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receiveByte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;DriverLib的底层实现也是通过寄存器来完成的，这样可以通过学习源代码的方式了解某些寄存器的功能，省略某些技术细节，随着处理器执行效率的提高，代码越来越复杂，这样的库函数操作将会非常常见。&lt;/p&gt;

</description>
        <pubDate>Sun, 08 Oct 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/10/08/msp432-uart</link>
        <guid isPermaLink="true">https://mypre.cn/2017/10/08/msp432-uart</guid>
        
        <category>MCU</category>
        
        <category>MSP432</category>
        
        <category>UART</category>
        
        <category>串口通信</category>
        
        
        <category>MSP432</category>
        
        <category>MCU</category>
        
      </item>
    
      <item>
        <title>MSP432 使用Timer_A输出PWM</title>
        <description>&lt;h2 id=&quot;timer_a-输出-pwm的问题&quot;&gt;Timer_A 输出 PWM的问题&lt;/h2&gt;

&lt;p&gt;在官方例程中给出的是一种直接操作寄存器的方式启动的，这让我们这些刚刚接触MSP432这种嵌入式芯片的来说是很难看懂的，然而PWM的输出是可以重新映射到其它端口输出的，例程中又掺杂了PMAP GPIO端口的映射，这更使得学习无从下手。&lt;/p&gt;

&lt;h3 id=&quot;通过寄存器操作的方式输出pwm波形&quot;&gt;通过寄存器操作的方式输出PWM波形&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    TIMER_A0-&amp;gt;CCR[0] = PWM_PERIOD;
    TIMER_A0-&amp;gt;CCTL[1] = TIMER_A_CCTLN_OUTMOD_7;      // CCR1 Reset/set
    TIMER_A0-&amp;gt;CCR[1] = PWM_PERIOD * (55 / 100.0);    // CCR1 PWM duty cycle
    TIMER_A0-&amp;gt;CTL = TIMER_A_CTL_SSEL__SMCLK // 使用SMCLK时钟源
                  | TIMER_A_CTL_MC__UP   
                  | TIMER_A_CTL_CLR;  // SMCLK, up mode, clear TAR
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;引用&lt;code class=&quot;highlighter-rouge&quot;&gt;msp432p401r.h&lt;/code&gt;头文件定义:&lt;/p&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#define TIMER_A_CTL_MC__UP    ((uint16_t)0x0010)    &lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*!&amp;lt; Up mode: Timer counts up to TAxCCR0 */&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;通过 动态修改 TIMER_A0-&amp;gt;CCR[1] 内容可以改变PWM间隔时间&lt;/p&gt;

&lt;h3 id=&quot;通过driverlib操作的方式输出pwm波形&quot;&gt;通过DriverLib操作的方式输出PWM波形&lt;/h3&gt;
&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* Timer_A PWM Configuration Parameter */&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Timer_A_PWMConfig&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pwmConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TIMER_A_CLOCKSOURCE_SMCLK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TIMER_A_CLOCKSOURCE_DIVIDER_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;32000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TIMER_A_CAPTURECOMPARE_REGISTER_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TIMER_A_OUTPUTMODE_RESET_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;3200&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Timer_A_generatePWM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TIMER_A1_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwmConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Timer_A_setCompareValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TIMER_A2_BASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_CAPTURECOMPARE_REGISTER_1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PWM_PERIOD&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//动态设置PWM 间隔时间
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;而timer_a.C文件中对&lt;code class=&quot;highlighter-rouge&quot;&gt;Timer_A_generatePWM&lt;/code&gt;函数定义如下&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Timer_A_generatePWM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Timer_A_PWMConfig&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//此处省略一部分，参数合法判断...
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;privateTimer_AProcessClockSourceDivider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clockSourceDivider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;TIMER_A_CMSIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TIMER_A_CLOCKSOURCE_INVERTED_EXTERNAL_TXCLK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_UPDOWN_MODE&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_DO_CLEAR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_TAIE_INTERRUPT_ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;TIMER_A_CMSIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CTL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clockSource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_UP_MODE&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_DO_CLEAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;TIMER_A_CMSIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CCR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timerPeriod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;TIMER_A_CMSIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CCTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TIMER_A_CAPTURECOMPARE_INTERRUPT_ENABLE&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TIMER_A_OUTPUTMODE_RESET_SET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;uint8_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compareRegister&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TIMER_A_CMSIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CCTL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compareOutputMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;TIMER_A_CMSIS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CCR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dutyCycle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以看到相关操作与寄存器类似，但一次只能修改一路PWM输出。难怪官方例程中直接使用寄存器操作，多路输出更加容易控制。&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Sep 2017 00:00:00 +0800</pubDate>
        <link>https://mypre.cn/2017/09/28/msp432-Timer_A-PWM</link>
        <guid isPermaLink="true">https://mypre.cn/2017/09/28/msp432-Timer_A-PWM</guid>
        
        <category>MCU</category>
        
        <category>MSP432</category>
        
        <category>Timer_A</category>
        
        <category>PWM</category>
        
        
        <category>MSP432</category>
        
        <category>MCU</category>
        
      </item>
    
  </channel>
</rss>
